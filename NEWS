seq32-1.1.1 (2018-03-13)
  * Add .desktop and icon to install.
    Add seq32.png screenshot.
  * Fix midi control gmute set by missing break fall through.
  * Increase song trigger grow box sizes for higher resolution monitors.
  * Adjust default tempo popup window size for some displays.
  * Fix continue play after stop marker for last cycle.
  * Cleanup redundant calls to set midibus.
  * Stop allowing change of start tempo when sequencer is running while in song mode.
  * Cleanup midi control bpm tempo marker update.
  * Fix intermittent incorrect initial bpm load on startup.
  * Rename setlist to playlist for consistency and clarity.
  * Change SEQ32 logo color to blue when in setlist mode.
    Update SEQ32 help file for change.
  * Fix erroneous setlist verification request after file load failure.
  * Cleanup resetting of playing markers on position change.
  * Fix update tempo map when bpm changed by midi control.
  * Fix file loading with & without tempo map.
  * Add seq24+ style logo update for playlist mode.
  * Fix clear playlist mode when file loading from recent files menu.
  * Fix reposition update from perfedit when transport is not rolling.
  * Add HMS & BBT clock display to perfedit. Thanks to Chris Ahlstrom.
    Modified for tempo changes and beat width.
  * Add Stop/Pause toggle button to perfedit to allow for continue mode.
  * Fix mute group learn for shift mask
  * Fix sscanf format warning.
  * Add mute groups change to global_is_modified.
  * Fix sysex continue.
  * Fix progress marker to reset when re-connect with jack.
  * Set LFO button to toggle show and hide.
  * Fix compiler warning snprintf maybe truncation.
  * Fix reposition to shut off correctly

seq32-1.1.0 (2017-11-02)
  * Fix key-p reposition if looping unchecked while running, without jack.
  * Fix tempo reset for looping.
  * Fix bpm update on jack position change.
  * Re-arrange file menu for recent and setlist.
  * Add Recent Midi files menu item - Thanks to Chris Ahlstrom, sequencer64 & Kepler34.
  * Fix tempo zoom.
  * Fix some memory leaks per valgind.
  * Fix some un-initialized variables, thanks to valgrind.
  * Fix sysex FF/RW key off for YPT.
  * Fix file load for legacy seq24 files that did not save time signature.

seq32-1.0.9 (2017-07-02)
  * Fix FF/Rewind to work with key-repeat properly.
  * Add CAPS to midi file extension checks.
  * Add export individual solo sequence to seqmenu pop-up.
    Right click on mainwnd sequence for 'export' selection and user will be
    prompted for file location. Also can be invoked from perfedit pop-up.
    Export will not include song triggers, or proprietary performance tags.
  * Add user verification pop-up on imported files when tempo and or time signature is different from
    main performance values.
  * Optimized code in midifile to greatly speed up file loading.
  * Add solo track export (song format).
  * Add solo trigger export (F10 configurable).
  * Add very limited support for using sysex for transport control.
  * Fix midi song position change when sync midiclock (no jack).
  * Add Tempo change to song editor (See SEQ32 document for details).
  * Add Stop markers to tempo change (See SEQ32 document for details).
  * Add setlist file support (See SEQ32 document for details).
  * Fix intermittent segfault on keylabel setting.
  * Clean up and beautify the LFO window.

seq32-1.0.8 (2017-04-19)
  * Add expanded recording and overwrite recording. New 'Rec' button in seqedit window.
  * Add user key configuration for rewind, fast forward and pointer keys.
  * Add BPM tap button - sequencer64 type. Thanks to Chris Ahlstrom.
  * Change BPM from integer to double, two decimal precision.
  * Add command line option to define alsa client name by user: -n <name>

seq32-1.0.7 (2016-10-10)
  * Add arch aur PKGBUILD.
  * Fix gcc 6 compiler warning for misleading indentation.
  * Adjust perfedit size request for some larger displays
  * Add label change to song/live button.
  * Add icons and .desktop files.
  * Fix drawing of note box inside on small wrapped notes.
  * Fix move_selected(), grow_selected_notes(), and quanized_selected() to stop being deleted by
    verify_and_link() when adjustment is >= sequence length.
  * Fix reverse pattern for unlinked notes.
  * NEW Add sequence reverse pattern to seqedit tools menu.
  * Fix random_selected() to stop wrapping when beyond max/min values.
  * Fix adjust_data_handle() to stop wrapping when beyond max value.
  
seq32-1.0.6 (2016-08-15)
  * Fix mutex vs std::mutex name clash with some gcc 5 compilers
  * Add middle button paste of copied/cut triggers automatic.
  * Add additional song snaps to allow for at least 1/2 beat precision.
  * Fix zoom truncation of grid drawing on song editor.
  * Add number skipping to display of grid measure numbers when squashed by zoom.
  * Revert back to using proprietary tags for global song time signature (SMF will not work in all cases).
  * Fix intermittent move sequence failure - carryover from seq24.
  * Various cleanup.

seq32-1.0.5 (2016-07-21)
  * NEW - Midi recording now capable of simultaneous, multi-sequence recording, channel specific. Record up to
    16 channels at once.
  * Now using SMF for time signature instead of proprietary tags (only effects projects that are NOT 4/4). If affected,
    the file should be loaded, then the time signature reset, and saved.
  * Warning added when opening or creating new file to close all sequence editors.
  * 'Apply song transpose' from edit menu not allowed when sequencer is running.
  * Proprietary tag for sequence transpose changed from ...13 to ...14 for consistency with sequencer64. You will 
    have to reset the flag of off sequences, then save. 

seq32-1.0.4 (2016-07-15)
  * Move to jack_process_callback() - seq32 is not slow sync.
  * Midi recording is now channel specific.
  * Update jack button .xpm

seq32-1.0.3 (2016-07-04)
  * Minor bug fixes.

seq32-1.0.2 (2016-06-29)
  * NEW - Add key binding for FF/Rewind (keys f,r) from song editor - NOT configurable.
  * NEW - Fixed midi song position to work when not starting from beginning of song. Play conditional upon song button.
  * Song export - adjust sequence length to snap nearest measure past end of trigger.

seq32-1.0.1 (2016-06-22)

Seq32 is primarily a copy and paste of features added to seq42. The two projects are maintained with
similar features for ease of maintenance and compatibility.

The following is only a partial list. Not to mention many, many, many bug fixes....

New Features
  * The "song mode" button was moved from the jack sync menu to the main window and now applies always,
    not just for jack.
  * The jack sync (xpm) button was moved from the jack sync menu to the song editor.
  * Key binding added to the song mode button and jack sync buttons which can be used from the sequence
    editor, and other windows.
  * Fixed the menu/sequencer key binding conflict - menu goes insensitive when running. Menu stop button
    added to shut off menu when NOT running. Key binding added.
  * Fixed key binding conflict when typing the set name on the main window, to stop triggering sequences.
  * Fixed inconsistent start/stop methods. When starting from the main window, sequence editor(keybind),
    or when connected to jack and started by the transport,	when the song button is pressed it will	cause
    the song editor to play. It will start at the left tick marker if in jack master mode, and also when
    not connected to jack. When started from the song editor, the song button is ignored and ALWAYS plays
    the song. When the song button is unchecked, it will play live if started from the main window and
    sequence editor, when connected to jack or not.
  * Changed the 'View' menu to 'Edit'.
  * Moved 'Import' from the file menu to the 'Edit' menu.
  * Stopped project file name change on Import.
  * Added 'Mute all tracks', 'Unmute all tracks', and 'Toggle mute for all tracks' to Edit menu.
  * Added transpose button to song editor. Added transpose check button to sequences (not permanent).
  * Added 'Apply song transpose' for permanent application of transpose to all sequences with their
  	transpose button checked.
  * sequence editor now supports use of the cursor keys to move selected notes up/down in pitch or
    left/right in time.  Up and down move by one semitone.  Hold down Shift to move up or down by octave.
    Right and left move the selected notes by the current snap amount.  (Note that it doesn't automatically
    snap the notes to the grid; if you want that, use the quantize function first.)  You can also nudge
    the selected notes by individual ticks by holding down the Shift key with left or right.
  * sequence editor has new menu items to randomize selected events (adding or subtracting a random value
    in a range from +/-1 to +/-16).  This can be used on velocity or CC values.
  * sequence editor has new menu items to select notes that occur on specific beats (even 1/4, odd 1/4,
    even 1/8, odd 1/8, even 1/16, odd 1/16).
  * Added new lfo window to sequence editor -
    allows manipulation of midi events - thanks to Mattias Lasersk√∂ld - Seq42
  	
The following features are from the seq42 project for conformity:

* NEW - split trigger (middle mouse button) will now split on mouse pointer location - grid-snapped
* NEW - ctrl-C song trigger and paste to any location. Middle mouse button click to location ctrl-V
  will paste to the location grid-snapped. Subsequent ctrl-V will paste directly after previous paste
  location. If no paste location is selected, then default will paste after copied trigger. 
* NEW - Now beats-per-measure, beat-width song editor are saved to file. New grid-snaps were added to
  accomodate.
* NEW - Export midi song render - combines all triggers on track together - can be used in conventional
  midi players. From edit menu, export song.
		Muted tracks and tracks with NO triggers will NOT be exported.
		This feature can also be used as a powerfull editing feature as follows:
			The user can split, slice and rearrange triggers to form a new sequence. Then mute all
			other tracks and export to a temporary midi file. Now they can import the combined
		    triggers/sequence as a new item. This makes editing of long improvised sequences into
		    smaller or modified sequences as well as combining several sequence parts painless. Also,
		    if the user has a variety of common items such as drum beats, control codes, etc that
		    can be used in other projects, this method is very convenient. The common items can
		    be kept in one file and exported all, individually, or in part by creating triggers and muting.
		    
* NEW - Note listen added to sequence draw notes and move notes.
* NEW - Fixed Jack master to work properly. Start as master on left tick marker and looping works.
* NEW - Jack slave and master conditional work - and will follow the jack frame without master BBT
* NEW - Fixed BBT calcualtions as master to send correct starting position.
* NEW - Added auto scroll to song editor and sequence editor (Thanks to Chris Ahlstrom - sequencer64 for the better code).
* NEW - Data event edit handles added for individual adjustment.
* NEW - New colors for sequence editor.
* NEW - Added Zoom of song editor (Thanks to Chris Ahlstrom - sequencer64) - ctrl mouse wheel, z and Z when focus on track editor.
* NEW - Added Chord note selection to sequence editor (Thanks to LMMS for the lookup table).
* NEW - Added Song editor will display play position marker even when stopped and show position changes from other jack clients.
* NEW - Added Auto scroll will follow position marker even when stopped.
* New - Fixed Beat width to work when NOT in jack mode.
* NEW - Added Non-timeline like key-p reposition song editor play location. With mouse focus on song editor(tracks), press 'p' to move play position to mouse location.
* NEW - Add sequence data selected note Ons to draw last in case mutiple events cover the selection.
* NEW - Midi import and export now read/supply type 1 midi tempo and time signature (Thanks to Chris Ahlstrom - sequencer64).
* NEW - Add pause to follow transport when editing with button press on song editor and sequence editor.
* NEW - Added additional music scale items in sequence editor (Thanks to Chris Ahlstrom - sequencer64).

seq32-1.0.0 (2016-05-18)

New SEQ32 version created - started at 1.0.0

seq24-0.9.3 (2016-01-24)

Fixed Bugs
  * Fix LASH support (crash on 64 Bit systems)
  * Fix broken JACK transport with newer jackd version
  * Fix clock tick drift
  * Fix jack session commandline (obsolete --file option removed)

New Features
  * Non recursive make

General Changes
  * Some code cleanups
  * C++11 compatible compiler required
  
seq24-0.9.2 (2010-11-27)

Fixed Bugs
  * Fix tooltip usage for older GTK versions (GTK_MINOR_VERSION < 12)
  * Fix sched_param memory leaks
  * Fix doubled key event for screen set name line

New Features
  * Add support for jack session, patch provided by Torben Hohn
  * Add interrupt handler for SIGUSR1 to enable LADISH level 1 support
  * Add interrupt handler for SIGINT to ask for unsaved file changes
  * Remove "-f" command line option to be replaced by a simple <filename>
    argument (see "seq24 --help" for more information)

General Changes
  * Add mnemonics for bottom line widgets in main window and label for
    screen set name edit line
  * Add missing command line parameters to help message, display short
    options as well
  * Add command line option for program version
  * Add missing command line parameters to man page
  * Remove complaints about file read error if configuration files do not
    exist
  * Cleanup configure.in: remove unused variables, harmonize option
    enabling/disabling
  * Some code cleanups


seq24-0.9.1 (2010-11-08)

Fixed Bugs
  * Fixed error if path for last used directory is not properly set
  * Fixed adding notes on the beginning when MIDI record is on and not
    playing sequence
  * Fixed buffer overflow caused by string handling (tool menu)
  * Fixed file save as crash
  * Fixed MIDI sysex event reading
  * Fixed error if path for last used directory is not properly set
  * "Cancel" option added to "Save file?" question

New Features
  * Support for MIDI clock synchronization 
  * Support for mute groups
  * Optionally show shortcut key label on sequence icon
  * Fruity loop mouse interaction mode added
  * Monophonic step editing on sequence
  * Polyphonic step editing

General Changes
  * A lot of code cleanups
  * Support for (lost) Win32 platform added
  * Optimized redraw for sequencer roll background (from Win32 version,
    Rob Buse)
  * Adaptations for jack2 applied


seq24-0.9.0 (2008-11-27)

Fixed Bugs
  * Fixed BPM saving on 64 bit platforms.
  * Several string buffer overruns fixed.
  * Several compiler warnings fixed.
  * Fixed memory leak if file loading fails due to format errors.

New Features
  * Round robbin logic on sequence edit added.
  * Start stop shortcut on sequence editor added.
  * Remember last used directory on configuration so you go where
    you worked.
  * Live Quantize, so notes get to the right time when you play.
  * Fixed volume. Makes midi input have a fixed volume when you record.
  * Added Redo function on sequence editor.
  * Switched to sigc++-2.0 API, to make program compatible to latest
    sigc++ version (2.2).
  * Man page from Ubuntu added.
  * Keyboard shortcuts for menu items added.
  * Added backspace as an optional delete key to the pattern editor.
  * Use new file dialog layout, MIDI files are preselectable. ".midi"
    suffix is added if user does not append a valid MIDI file extension.
  * New menu item to show and hide song edit window.
  * Tooltips for bottom line elements in main window added.
  * File new/open/save/close logic rewritten to monitor user applied file
    changes.
  * "dump" program removed.
  * About dialog changed to use new layout.
  * Zooming and panning in the editor window using the scroll wheel (when
    CTRL or SHIFT are used) implemented. Horizontal scroll step interval
    increased to 1/16 note per zoom level and page interval to 1 bar.
  * Panning in the song editor using the scroll wheel (when SHIFT is used)
    implemented.
  * Window icons for song editor and sequence editor added.
